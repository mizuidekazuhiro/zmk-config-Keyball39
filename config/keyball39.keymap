#define DEFAULT 0
#define ADJUSTMENT 1
#define NUM     2
#define SYM     3
#define MOUSE   4
#define SCROLL  5
#define FUN     6
#define SNIPE   7

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <170>;
    flavor = "balanced";
    quick-tap-ms = <170>;
};

&mt {
    tapping-term-ms = <170>;
    flavor = "tap-preferred";
    quick-tap-ms = <170>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shisokuenzan: shisokuenzan {
            compatible = "zmk,behavior-tap-dance";
            label = "SHISOKUENZAN";
            #binding-cells = <0>;
            bindings = <&kp KP_ASTERISK>, <&kp KP_DIVIDE>, <&kp KP_EQUAL>;

            tapping-term-ms = <270>;
        };

        paste_paste: paste_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "PASTE_PASTE";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>, <&suuchinomi_paste>;
        };

        kakko: kakko {
            compatible = "zmk,behavior-tap-dance";
            label = "KAKKO";
            #binding-cells = <0>;
            bindings = <&kp LS(N8)>, <&kp LS(N9)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };

        shotai: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp F &kp F>;
            label = "NEW_MACRO";
        };

        suuchinomi_paste: suuchinomi_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp V &kp V>;
            label = "SUUCHINOMI_PASTE";
        };

        soushinsumi_folder_idou: soushinsumi_folder_idou {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Y) &kp INTERNATIONAL_2 &kp S &kp O &kp U &kp S &kp I &kp N &kp S &kp U &kp M &kp I &kp SPACE &kp KP_ENTER>;
            label = "SOUSHINSUMI_FOLDER_IDOU";
        };

        auto_kakko_eng: auto_kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INTERNATIONAL_5 &kp LS(N8) &kp LS(N9) &kp LEFT>;
            label = "AUTO_KAKKO";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <18 19>;
        };

        click {
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;
        };

        IME_on {
            bindings = <&kp INT_KATAKANAHIRAGANA>;
            key-positions = <26 27>;
        };

        IME_change {
            bindings = <&kp INTERNATIONAL_5>;
            key-positions = <22 23>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <7 8 9>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <17 18 19>;
        };

        right_click {
            bindings = <&mkp RCLK>;
            key-positions = <17 18>;
        };

        Alt_f4 {
            bindings = <&kp RA(F4)>;
            key-positions = <0 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q             &kp W             &kp E           &kp R               &kp T                                                &kp Y        &kp U                &kp I            &kp O            &kp P
&mt LEFT_SHIFT A  &mt LEFT_GUI S    &mt LEFT_ALT D  &mt LEFT_CONTROL F  &kp G                                                &kp H        &mt RIGHT_CONTROL J  &mt RIGHT_ALT K  &mt RIGHT_GUI L  &mt RIGHT_SHIFT MINUS
&kp Z             &kp X             &kp C           &kp V               &kp B                                                &kp N        &kp M                &kp COMMA        &kp DOT          &kp SLASH
&mo 1             &mt LEFT_GUI TAB  &kp LEFT_ALT    &lt 6 DELETE        &lt 2 BACKSPACE  &lt 4 INTERNATIONAL_2  &lt 1 ENTER  &lt 3 SPACE                                                         &kp LC(LEFT_SHIFT)
            >;
        };

        adjustment {
            bindings = <
&trans     &trans           &trans  &trans      &kp F5                               &soushinsumi_folder_idou  &trans  &trans  &trans  &trans
&kp LG(A)  &kp PRINTSCREEN  &trans  &trans      &trans                               &shotai                   &trans  &trans  &trans  &trans
&trans     &trans           &trans  &trans      &trans                               &tog 4                    &trans  &trans  &trans  &trans
&trans     &trans           &trans  &kp ESCAPE  &kp DELETE  &kp LEFT_GUI  &kp ENTER  &kp LEFT_ALT                                      &trans
            >;

            label = "adj";
        };

        Cursor_layer {
            bindings = <
&trans     &kp F2             &trans              &kp F4            &kp PERCENT                         &trans     &trans     &trans    &trans     &trans
&kp LSHFT  &kp LEFT_GUI       &kp LEFT_ALT        &kp LEFT_CONTROL  &auto_kakko_eng                     &trans     &kp LEFT   &kp UP    &kp RIGHT  &kp TAB
&trans     &trans             &kp LC(C)           &paste_paste      &trans                              &trans     &kp PG_UP  &kp DOWN  &kp PG_DN  &trans
&trans     &kp LS(LC(COMMA))  &kp LS(LC(PERIOD))  &trans            &trans           &trans  &kp ENTER  &kp SPACE                                  &trans
            >;

            label = "Cursor";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION   &kp AT_SIGN       &kp HASH          &kp DOLLAR        &kp PERCENT                                          &kp CARET          &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS                 &kp MINUS
&mo 8             &none             &none             &none             &none                                                &kp JP_EQUAL       &kp EQUAL      &kp LEFT_BRACKET  &mt LS(RIGHT_BRACKET) RIGHT_BRACKET  &mt LS(BACKSLASH) BACKSLASH
&kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)                                           &kp JP_UNDERSCORE  &kp JP_PIPE    &kp LS(COMMA)     &kp LS(PERIOD)                       &mt SEMICOLON SQT
&kp C_MUTE        &trans            &trans            &kp DELETE        &kp BACKSPACE  &kp LEFT_CONTROL  &kp LC(LA(DELETE))  &trans                                                                                   &bt BT_SEL 0
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&mo 5      &none     &none     &none          &none                           &to 0          &none      &none           &none      &none
&kp LSHFT  &kp LGUI  &kp LALT  &kp LCTRL      &none                           &kp PAGE_UP    &mkp LCLK  &msc SCRL_UP    &mkp RCLK  &none
&none      &none     &none     &none          &none                           &kp PAGE_DOWN  &mkp MB4   &msc SCRL_DOWN  &mkp MB5   &mkp MCLK
&none      &trans    &trans    &kp BACKSPACE  &kp LEFT_SHIFT  &trans  &trans  &none                                                &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &kp LEFT_CONTROL                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                          &trans
            >;
        };

        Ten_Key {
            label = "Ten_Key";
            bindings = <
&trans     &kp F2                 &trans                    &kp F4     &kp PERCENT                          &kp PERCENT  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_MINUS
&kp LSHFT  &kp LGUI               &kp LALT                  &kp LCTRL  &auto_kakko_eng                      &trans       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_PLUS
&trans     &trans                 &trans                    &trans     &trans                               &trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &shisokuenzan
&mo 7      &kp LS(LC(LESS_THAN))  &kp LS(LC(GREATER_THAN))  &trans     &trans           &trans  &kp RETURN  &kp N0                                                 &kp KP_EQUAL
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp F7  &kp F8  &kp F9  &kp LEFT_SHIFT                       &none   &kp F7  &kp F8  &kp F9  &kp F10
&none   &kp F4  &kp F5  &kp F6  &kp LEFT_CONTROL                     &none   &kp F4  &kp F5  &kp F6  &kp F11
&none   &none   &kp F2  &kp F3  &kp LALT                             &none   &none   &kp F2  &kp F3  &kp F12
&trans  &trans  &trans  &trans  &trans            &trans  &kp ENTER  &trans                          &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&bt BT_CLR_ALL  &trans        &trans        &trans        &bootloader                   &bootloader  &trans  &trans  &trans  &trans
&trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                  &trans       &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans                        &trans       &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans  &trans  &trans                               &trans
            >;
        };
    };
};
